using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Sql;
using System.Data.SqlClient;

namespace BarkodluEnvanterKayit
{
    public partial class notebook : Form
    {
        public notebook()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource2.FillAsync();
        }

        SqlConnection baglanti = new SqlConnection("Data Source=DESKTOP-BCV2AJ1;Initial Catalog=BarkodEnvanterDB;Integrated Security=True");

        private void btn_NotebookKaydet_Click(object sender, EventArgs e)
        {
            //Sql konutlarıyla veritabanına veriler kaydeiliyor
            SqlCommand komut = new SqlCommand("INSERT INTO tblnotebook(notebookmarka,notebookmodel,notebookhdd,notebookram,notebookgenel,notebookdepartman,notebookkullanici,notebookbarkod) values (@p1,@p2,@p3,@p4,@p5,@p6,@p7,@p8) ", baglanti);

            //Textboxlarda yazılanlar parametrelere atanıp veritabanına kaydediliyor
            komut.Parameters.AddWithValue("@p1", Convert.ToString(txt_Notebookmarka.Text));
            komut.Parameters.AddWithValue("@p2", Convert.ToString(txt_Notebookmodel.Text));
            komut.Parameters.AddWithValue("@p3", Convert.ToString(txt_Notebookhdd.Text));
            komut.Parameters.AddWithValue("@p4", Convert.ToString(txt_Notebookram.Text));
            komut.Parameters.AddWithValue("@p5", Convert.ToString(txt_Notebookgenel.Text));
            komut.Parameters.AddWithValue("@p6", Convert.ToString(txt_Notebookdepartman.Text));
            komut.Parameters.AddWithValue("@p7", Convert.ToString(txt_Notebookkullanici.Text));
            komut.Parameters.AddWithValue("@p8", Convert.ToString(txt_Notebookbarkod.Text));

            try//komutları çalıştırmayı dene
            {
                baglanti.Open();
                komut.ExecuteNonQuery();
                MessageBox.Show("Bilgiler Veritabanına Kaydedildi.", "Bilgi", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }

            catch (Exception ex)//Eger hata varsa hata mesajını göster 
            {
                MessageBox.Show(ex.Message.ToString());
            }
            baglanti.Close();
        }

        private void btn_NotebookVeriCek_Click(object sender, EventArgs e)
        {
            SqlCommand komut2 = new SqlCommand("SELECT * FROM tblnotebook where notebookid=@notebookid", baglanti);//notebookid paramatresindeki degere göre verileri getir
            baglanti.Open();
            komut2.Parameters.AddWithValue("@notebookid", txt_NotebookId.Text);//txt notebook id den veri 
            komut2.ExecuteNonQuery();
            SqlDataReader dr = komut2.ExecuteReader();//veri okuma işlemini başlat
            if (dr.Read())//okuma işlemini yap ve tablolardaki verileri sırayla textboxlara aktar
            {
                txt_Notebookmarka.Text = dr["notebookmarka"].ToString();
                txt_Notebookmodel.Text = dr["notebookmodel"].ToString();
                txt_Notebookhdd.Text = dr["notebookhdd"].ToString();
                txt_Notebookram.Text = dr["notebookram"].ToString();
                txt_Notebookgenel.Text = dr["notebookgenel"].ToString();
                txt_Notebookdepartman.Text = dr["notebookdepartman"].ToString();
                txt_Notebookkullanici.Text = dr["notebookkullanici"].ToString();
                txt_Notebookbarkod.Text = dr["notebookbarkod"].ToString();
            }
            else // okuma işleminde hata olursa textboxlara bunları yazdır
            {
                txt_Notebookmarka.Text = "Veri Çekilemedi";
                txt_Notebookmodel.Text = "Veri Çekilemedi";
                txt_Notebookhdd.Text = "Veri Çekilemedi";
                txt_Notebookram.Text = "Veri Çekilemedi";
                txt_Notebookgenel.Text = "Veri Çekilemedi";
                txt_Notebookdepartman.Text = "Veri Çekilemedi";
                txt_Notebookkullanici.Text = "Veri Çekilemedi";
                txt_Notebookbarkod.Text = "Veri Çekilemedi";
            }
            baglanti.Close();
        }

        private void btn_NotebookVeriGuncelle_Click(object sender, EventArgs e)
        {
            baglanti.Open();
            SqlCommand komut5 = new SqlCommand("UPDATE tblnotebook SET notebookdepartman=@notebookdepartman,notebookkullanici=@notebookkullanici,notebookbarkod=@notebookbarkod WHERE notebookid=@notebookid", baglanti);

            komut5.Parameters.AddWithValue("@notebookid", txt_NotebookId.Text);
            komut5.Parameters.AddWithValue("@notebookdepartman", txt_Notebookdepartman.Text);
            komut5.Parameters.AddWithValue("@notebookkullanici", txt_Notebookkullanici.Text);
            komut5.Parameters.AddWithValue("@notebookbarkod", txt_Notebookbarkod.Text);

            MessageBox.Show("Güncelleme Başarıyla Tamamlandı.");
            komut5.ExecuteNonQuery();
            baglanti.Close();
        }

        private void btn_NotebookVeriSil_Click(object sender, EventArgs e)
        {
            baglanti.Open();
            SqlCommand komut4 = new SqlCommand("DELETE FROM tblnotebook WHERE notebookid=@notebookid", baglanti); // sql sorgu yazıldı
            komut4.Parameters.AddWithValue("notebookid", txt_NotebookId.Text); // kasa id textboxtan çekildi
            komut4.ExecuteNonQuery(); // komut çalıştırıldı
            SqlDataReader dr = komut4.ExecuteReader();
            MessageBox.Show("Veri Silme İşlemi Başarılı !!", "Uyarı", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            baglanti.Close();
            txt_NotebookId.Text = "";
        }

        private void btn_FormYenile_Click(object sender, EventArgs e)
        {
            txt_Notebookmarka.Text = " ";
            txt_Notebookmodel.Text = " ";
            txt_Notebookhdd.Text = " ";
            txt_Notebookram.Text = " ";
            txt_Notebookgenel.Text = " ";
            txt_Notebookdepartman.Text = " ";
            txt_Notebookkullanici.Text = " ";
            txt_Notebookbarkod.Text = " ";
            txt_NotebookId.Text = "";
        }

        private void btn_TabloYenile_Click(object sender, EventArgs e)
        {
            baglanti.Open();
            SqlCommand komut3 = new SqlCommand("SELECT * FROM tblnotebook", baglanti);//sorgu yazıldı
            SqlDataAdapter da = new SqlDataAdapter(komut3);
            DataTable dt = new DataTable();
            da.Fill(dt);//veriler degiskenlere çekilip doldurma işlemi yapıldı
            gridC_Notebook.DataSource = dt; //datagrid e veriler dolduruldu
            baglanti.Close();
        }

        private void Btn_NotebookExcell_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = ".xls (*.xls)|*.xls"; //xls dosyası oluştur
            sfd.FileName = "NoteBookVeriler.xls"; //dosya adı belirlendi
            DialogResult res = sfd.ShowDialog();
            if (res == DialogResult.OK)
            {
                gridView1.ExportToXls(sfd.FileName);//tablodaki veriler komple export et
            }
        }
    }
}
